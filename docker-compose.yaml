services:
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka-network
    volumes:
      - zookeeper-data:/bitnami/zookeeper

  kafka:
    image: bitnami/kafka:latest
    ports:
      - '9092:9092'
      - '29092:29092'
    restart: on-failure
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - kafka-network
    volumes:
      - kafka-data:/bitnami/kafka

  akhq:
    image: tchiotludo/akhq:latest
    ports:
      - '8080:8080'
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            kafka-cluster:
              properties:
                bootstrap.servers: "kafka:9092"
    depends_on:
      - kafka
    networks:
      - kafka-network

  cassandra:
    image: cassandra:3.11
    ports:
      - '9042:9042'
    environment:
      - CASSANDRA_CLUSTER_NAME=Learning Cluster
      - CASSANDRA_DC=dc1
      - CASSANDRA_RACK=rack1
      - CASSANDRA_LISTENER_INTERFACE=eth0
    volumes:
      - cassandra-data:/var/lib/cassandra
    networks:
      - kafka-network

  elasticsearch:
    image: bitnami/elasticsearch:latest
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xmx512m -Xms512m
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
    ports:
      - '9200:9200'
    networks:
      - kafka-network
    volumes:
      - es-data:/usr/share/elasticsearch/data

  redis:
    image: redis:latest
    ports:
      - '6380:6380'
    networks:
      - kafka-network
    volumes:
      - redis-data:/data

  redis-ui:
    image: rediscommander/redis-commander:latest
    ports:
      - '8001:8081'
    environment:
      - REDIS_HOSTS=local:redis:6380
    networks:
      - kafka-network

volumes:
  zookeeper-data:
  kafka-data:
  cassandra-data:
  es-data:
  redis-data:
  redis-ui-data:

networks:
  kafka-network:
    driver: bridge
